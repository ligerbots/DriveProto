// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc2877.subsystems;

import org.usfirst.frc2877.RobotMap;
import org.usfirst.frc2877.OI;
import org.usfirst.frc2877.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc2877.Robot;

/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANJaguar frontLeftDrive = RobotMap.driveTrainFrontLeftDrive;
    CANJaguar frontRightDrive = RobotMap.driveTrainFrontRightDrive;
    CANJaguar backLeftDrive = RobotMap.driveTrainBackLeftDrive;
    CANJaguar backRightDrive = RobotMap.driveTrainBackRightDrive;
    RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;
    double vC = 1.0; //velocity control multiplier; reduce to scale the input from the joystick
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public DriveTrain() {
        System.out.println("driveTrain constructed.");
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
        System.out.println("driveTrain.initDefaultCommand called.");
    }

    public void drive(double x, double y) {
        if (robotDrive != null) {
            //this is reversed because of the default variable names, which are moveValue and rotateValue, IN THAT ORDER.
            //since the Y controls going forward, we put Y first. If when you press up the robot turns, undo this.
            robotDrive.arcadeDrive(vC*y, vC*x);
        }
    }
}
